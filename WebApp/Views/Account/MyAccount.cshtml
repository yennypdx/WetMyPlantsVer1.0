@model WebApp.Models.AccountViewModels.MyAccountViewModel

@{
    bool doNotNotify = false;
    ViewBag.Title = "My Account";
    if(Model.NotifyPhone == false && Model.NotifyEmail == false)
    {
        doNotNotify = true;
    }
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/home">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">My Account</li>
    </ol>
</nav>

@if(ViewBag.Update != null)
{
    <div class="container">
        @if ((string) ViewBag.Update == "true")
        {
            <div class="alert alert-success text-center">Saved!</div>
        }
        else if ((string) ViewBag.Update == "false")
        {
            <div class="alert alert-warning text-center">There was an error saving your information.</div>
        }
    </div>
}

<div class="container pt-5">

    <h2 class="text-center">My Account</h2>
    <hr />
    @using(Html.BeginForm("UpdateUser", "Account", FormMethod.Post))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.AntiForgeryToken()
        <input type="hidden" name="Id" value="@Model.Id" />
        <div class="container">
            <div class="row">
                <div class="col-md-7">
                    <h5>Account Details:</h5>
                    <div class="form-group">
                        <label for="first-name">First Name</label>
                        @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})*@
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="last-name">Last Name</label>
                        @* @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label col-md-2"})*@
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="phone">Phone Number</label>
                        @*@Html.LabelFor(model => model.Phone, htmlAttributes: new {@class = "control-label col-md-2"})*@
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="email">Email</label>
                        @*@Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})*@
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-5">
                    <h5>Notification Settings:</h5>

                        <div class="form-group row">
                            <div class="col-2">
                                <label for="notify-phone">Phone:</label>
                            </div>
                            <div class="col">
                                <input type="checkbox" id="notify-phone" checked="@Model.NotifyPhone" class="pointer ml-3" />
                                <input type="hidden" name="NotifyPhone" value=@(Model.NotifyPhone ? "true" : "false") id="notify-phone-value" />
                            </div>
                            @Html.ValidationMessageFor(model => model.NotifyPhone, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group row">
                            <div class="col-2">
                                <label for="notify-email">Email:</label>
                            </div>
                            <div class="col">
                                <input type="checkbox" id="notify-email" checked="@Model.NotifyEmail" class="pointer ml-3" />
                                <input type="hidden" name="NotifyEmail" value=@(Model.NotifyEmail ? "true" : "false") id="notify-email-value" />
                            </div>
                            @Html.ValidationMessageFor(model => model.NotifyPhone, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group row">
                            <div class="col-2">
                                <label for="notify-email">None:</label>
                            </div>
                            <div class="col">
                                <input type="checkbox" name="" id="do-not-notify" checked="@doNotNotify" class="pointer ml-3" />
                            </div>
                        </div>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save Changes" class="btn btn-success" />
            </div>
        </div>

    }
    <a href="/Account/DeleteUser" class="text-danger">Delete My Account</a>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(() => {
            const doNotNotify = $('input#do-not-notify');
            const notifyEmailBox = $('input#notify-email');
            const notifyPhoneBox = $('input#notify-phone');
            const notifyEmailValue = $('input#notify-email-value');
            const notifyPhoneValue = $('input#notify-phone-value');

            notifyEmailBox.click(() => modifyNotifyEmail());
            notifyPhoneBox.click(() => modifyNotifyPhone());
            doNotNotify.click(() => setDoNotNotify());

            function modifyNotifyEmail() {
                let isSet = notifyEmailValue.val() === 'true';
                if (isSet) {
                    notifyEmailValue.val('false');
                    notifyEmailBox.prop('checked', false);
                } else {
                    notifyEmailValue.val('true');
                    notifyEmailBox.prop('checked', true);
                }
                assessDoNotNotifyBox();
            }

            function modifyNotifyPhone() {
                let isSet = notifyPhoneValue.val() === 'true';
                if (isSet) {
                    notifyPhoneValue.val('false');
                    notifyPhoneBox.prop('checked', false);
                } else {
                    notifyPhoneValue.val('true');
                    notifyPhoneBox.prop('checked', true);
                }
                assessDoNotNotifyBox();
            }

            function assessDoNotNotifyBox() {
                if (notifyPhoneBox.prop('checked') || notifyEmailBox.prop('checked')) {
                    doNotNotify.prop('checked', false);
                } else {
                    doNotNotify.prop('checked', true);
                }
            }

            function setDoNotNotify() {
                doNotNotify.prop('checked', true);
                notifyPhoneValue.val('false');
                notifyPhoneBox.prop('checked', false);
                notifyEmailValue.val('false');
                notifyEmailBox.prop('checked', false);
            }
        });
    </script>
}